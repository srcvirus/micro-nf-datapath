// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: micronf_agent.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "micronf_agent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace rpc_agent {
class CreateRingRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateRingRequest> {
} _CreateRingRequest_default_instance_;
class ErrnoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Errno> {
} _Errno_default_instance_;
class DeployConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeployConfig> {
} _DeployConfig_default_instance_;

namespace protobuf_micronf_5fagent_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRingRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Errno, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Errno, err_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeployConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeployConfig, config_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(CreateRingRequest)},
  { 5, -1, sizeof(Errno)},
  { 10, -1, sizeof(DeployConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateRingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Errno_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeployConfig_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "micronf_agent.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _CreateRingRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Errno_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _DeployConfig_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _CreateRingRequest_default_instance_.DefaultConstruct();
  _Errno_default_instance_.DefaultConstruct();
  _DeployConfig_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\023micronf_agent.proto\022\trpc_agent\"!\n\021Crea"
      "teRingRequest\022\014\n\004name\030\001 \001(\t\"\024\n\005Errno\022\013\n\003"
      "err\030\001 \001(\005\"\036\n\014DeployConfig\022\016\n\006config\030\001 \001("
      "\t2\217\001\n\003RPC\022A\n\017rpc_create_ring\022\034.rpc_agent"
      ".CreateRingRequest\032\020.rpc_agent.Errno\022E\n\030"
      "rpc_deploy_microservices\022\027.rpc_agent.Dep"
      "loyConfig\032\020.rpc_agent.Errnob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 275);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "micronf_agent.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_micronf_5fagent_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRingRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRingRequest::CreateRingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_micronf_5fagent_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpc_agent.CreateRingRequest)
}
CreateRingRequest::CreateRingRequest(const CreateRingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:rpc_agent.CreateRingRequest)
}

void CreateRingRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CreateRingRequest::~CreateRingRequest() {
  // @@protoc_insertion_point(destructor:rpc_agent.CreateRingRequest)
  SharedDtor();
}

void CreateRingRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateRingRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRingRequest::descriptor() {
  protobuf_micronf_5fagent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_micronf_5fagent_2eproto::file_level_metadata[0].descriptor;
}

const CreateRingRequest& CreateRingRequest::default_instance() {
  protobuf_micronf_5fagent_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateRingRequest* CreateRingRequest::New(::google::protobuf::Arena* arena) const {
  CreateRingRequest* n = new CreateRingRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc_agent.CreateRingRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CreateRingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpc_agent.CreateRingRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpc_agent.CreateRingRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpc_agent.CreateRingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpc_agent.CreateRingRequest)
  return false;
#undef DO_
}

void CreateRingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpc_agent.CreateRingRequest)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc_agent.CreateRingRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:rpc_agent.CreateRingRequest)
}

::google::protobuf::uint8* CreateRingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpc_agent.CreateRingRequest)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc_agent.CreateRingRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rpc_agent.CreateRingRequest)
  return target;
}

size_t CreateRingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc_agent.CreateRingRequest)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpc_agent.CreateRingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpc_agent.CreateRingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpc_agent.CreateRingRequest)
    MergeFrom(*source);
  }
}

void CreateRingRequest::MergeFrom(const CreateRingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpc_agent.CreateRingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void CreateRingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpc_agent.CreateRingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRingRequest::CopyFrom(const CreateRingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc_agent.CreateRingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRingRequest::IsInitialized() const {
  return true;
}

void CreateRingRequest::Swap(CreateRingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRingRequest::InternalSwap(CreateRingRequest* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRingRequest::GetMetadata() const {
  protobuf_micronf_5fagent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_micronf_5fagent_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateRingRequest

// string name = 1;
void CreateRingRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateRingRequest::name() const {
  // @@protoc_insertion_point(field_get:rpc_agent.CreateRingRequest.name)
  return name_.GetNoArena();
}
void CreateRingRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc_agent.CreateRingRequest.name)
}
#if LANG_CXX11
void CreateRingRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rpc_agent.CreateRingRequest.name)
}
#endif
void CreateRingRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc_agent.CreateRingRequest.name)
}
void CreateRingRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc_agent.CreateRingRequest.name)
}
::std::string* CreateRingRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:rpc_agent.CreateRingRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateRingRequest::release_name() {
  // @@protoc_insertion_point(field_release:rpc_agent.CreateRingRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateRingRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:rpc_agent.CreateRingRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Errno::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Errno::Errno()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_micronf_5fagent_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpc_agent.Errno)
}
Errno::Errno(const Errno& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_ = from.err_;
  // @@protoc_insertion_point(copy_constructor:rpc_agent.Errno)
}

void Errno::SharedCtor() {
  err_ = 0;
  _cached_size_ = 0;
}

Errno::~Errno() {
  // @@protoc_insertion_point(destructor:rpc_agent.Errno)
  SharedDtor();
}

void Errno::SharedDtor() {
}

void Errno::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Errno::descriptor() {
  protobuf_micronf_5fagent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_micronf_5fagent_2eproto::file_level_metadata[1].descriptor;
}

const Errno& Errno::default_instance() {
  protobuf_micronf_5fagent_2eproto::InitDefaults();
  return *internal_default_instance();
}

Errno* Errno::New(::google::protobuf::Arena* arena) const {
  Errno* n = new Errno;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Errno::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc_agent.Errno)
  err_ = 0;
}

bool Errno::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpc_agent.Errno)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 err = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpc_agent.Errno)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpc_agent.Errno)
  return false;
#undef DO_
}

void Errno::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpc_agent.Errno)
  // int32 err = 1;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err(), output);
  }

  // @@protoc_insertion_point(serialize_end:rpc_agent.Errno)
}

::google::protobuf::uint8* Errno::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpc_agent.Errno)
  // int32 err = 1;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rpc_agent.Errno)
  return target;
}

size_t Errno::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc_agent.Errno)
  size_t total_size = 0;

  // int32 err = 1;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Errno::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpc_agent.Errno)
  GOOGLE_DCHECK_NE(&from, this);
  const Errno* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Errno>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpc_agent.Errno)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpc_agent.Errno)
    MergeFrom(*source);
  }
}

void Errno::MergeFrom(const Errno& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpc_agent.Errno)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void Errno::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpc_agent.Errno)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Errno::CopyFrom(const Errno& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc_agent.Errno)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Errno::IsInitialized() const {
  return true;
}

void Errno::Swap(Errno* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Errno::InternalSwap(Errno* other) {
  std::swap(err_, other->err_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Errno::GetMetadata() const {
  protobuf_micronf_5fagent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_micronf_5fagent_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Errno

// int32 err = 1;
void Errno::clear_err() {
  err_ = 0;
}
::google::protobuf::int32 Errno::err() const {
  // @@protoc_insertion_point(field_get:rpc_agent.Errno.err)
  return err_;
}
void Errno::set_err(::google::protobuf::int32 value) {
  
  err_ = value;
  // @@protoc_insertion_point(field_set:rpc_agent.Errno.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeployConfig::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeployConfig::DeployConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_micronf_5fagent_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpc_agent.DeployConfig)
}
DeployConfig::DeployConfig(const DeployConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.config().size() > 0) {
    config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_);
  }
  // @@protoc_insertion_point(copy_constructor:rpc_agent.DeployConfig)
}

void DeployConfig::SharedCtor() {
  config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeployConfig::~DeployConfig() {
  // @@protoc_insertion_point(destructor:rpc_agent.DeployConfig)
  SharedDtor();
}

void DeployConfig::SharedDtor() {
  config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeployConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeployConfig::descriptor() {
  protobuf_micronf_5fagent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_micronf_5fagent_2eproto::file_level_metadata[2].descriptor;
}

const DeployConfig& DeployConfig::default_instance() {
  protobuf_micronf_5fagent_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeployConfig* DeployConfig::New(::google::protobuf::Arena* arena) const {
  DeployConfig* n = new DeployConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeployConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc_agent.DeployConfig)
  config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeployConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpc_agent.DeployConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_config()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->config().data(), this->config().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpc_agent.DeployConfig.config"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpc_agent.DeployConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpc_agent.DeployConfig)
  return false;
#undef DO_
}

void DeployConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpc_agent.DeployConfig)
  // string config = 1;
  if (this->config().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config().data(), this->config().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc_agent.DeployConfig.config");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->config(), output);
  }

  // @@protoc_insertion_point(serialize_end:rpc_agent.DeployConfig)
}

::google::protobuf::uint8* DeployConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpc_agent.DeployConfig)
  // string config = 1;
  if (this->config().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config().data(), this->config().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc_agent.DeployConfig.config");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->config(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rpc_agent.DeployConfig)
  return target;
}

size_t DeployConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc_agent.DeployConfig)
  size_t total_size = 0;

  // string config = 1;
  if (this->config().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->config());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeployConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpc_agent.DeployConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const DeployConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeployConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpc_agent.DeployConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpc_agent.DeployConfig)
    MergeFrom(*source);
  }
}

void DeployConfig::MergeFrom(const DeployConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpc_agent.DeployConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.config().size() > 0) {

    config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_);
  }
}

void DeployConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpc_agent.DeployConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeployConfig::CopyFrom(const DeployConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc_agent.DeployConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeployConfig::IsInitialized() const {
  return true;
}

void DeployConfig::Swap(DeployConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeployConfig::InternalSwap(DeployConfig* other) {
  config_.Swap(&other->config_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeployConfig::GetMetadata() const {
  protobuf_micronf_5fagent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_micronf_5fagent_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeployConfig

// string config = 1;
void DeployConfig::clear_config() {
  config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeployConfig::config() const {
  // @@protoc_insertion_point(field_get:rpc_agent.DeployConfig.config)
  return config_.GetNoArena();
}
void DeployConfig::set_config(const ::std::string& value) {
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc_agent.DeployConfig.config)
}
#if LANG_CXX11
void DeployConfig::set_config(::std::string&& value) {
  
  config_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rpc_agent.DeployConfig.config)
}
#endif
void DeployConfig::set_config(const char* value) {
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc_agent.DeployConfig.config)
}
void DeployConfig::set_config(const char* value, size_t size) {
  
  config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc_agent.DeployConfig.config)
}
::std::string* DeployConfig::mutable_config() {
  
  // @@protoc_insertion_point(field_mutable:rpc_agent.DeployConfig.config)
  return config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeployConfig::release_config() {
  // @@protoc_insertion_point(field_release:rpc_agent.DeployConfig.config)
  
  return config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeployConfig::set_allocated_config(::std::string* config) {
  if (config != NULL) {
    
  } else {
    
  }
  config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config);
  // @@protoc_insertion_point(field_set_allocated:rpc_agent.DeployConfig.config)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc_agent

// @@protoc_insertion_point(global_scope)
